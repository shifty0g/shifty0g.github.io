[
  
  {
    "title": "Toolbox",
    "url": "/posts/toolbox/",
    "categories": "cheatsheets, toolbox",
    "tags": "Tools",
    "date": "2022-04-03 13:55:00 +0100",
    





    "snippet": "Here i will share the tools i use on a day to day basis and make my life easier.I will try and limit this to stuff i think is really worth taklking about. Everything else check out My Github StarsWindowsMobaxtermThis is great for managing logo sessions to boxes when you are on a job.  This has a nice SSH Tunnel tool. Also can spin up a number of services quickly  web, ftp, smb…esthttps://mobaxterm.mobatek.net/UeliThis is a great app. have your own customizable launcher with some great plugins. helps speed up my workflow because you can access things so quicklyI like the shortcuts feature alothttps://ueli.app/#/Notepad++yes its rough arond the edges nowdays but I still find myself using ithttps://notepad-plus-plus.org/downloads/dngrepAutoHotKeyDont work harder work smarter. This can help you with just that create macros and little scripts for things you do more than once or to speed things up..  I have released a few tools using this  Vulnsearch - this will search on popular exploit websites for vulns for you  Secpol - Exports the GUI version from secpol.msc to csv fileLinuxpecoduplicutbatcatzshI was a religous bash user until i started using zsh - the plugins and little extras it has just makes it better imo..  I will do a post on this at some timeBrowserpwnfoxthis is really good for seperation testing allowing you to have sandbox tab so can login with another account.wappalyserfind out what technologies are used by the appretire.jsThis is good for findings vulnerable web components - jquery..estfoxyproxyproxy switcherstart.meI like this and have a few boards for testing seperated outhttps://start.me/Checkout the dashboard i made https://github.com/shifty0g/start-meHack-ToolsSeucirtyHeaders.io Analysermake sure to select privateBurp Pluginshttps://apps.burpsuite.guide/Authorizegood for seperation and access control testing. works well with pwnfox. hoover in a low priv cookie and it will follow along ur browser high priv accountMiscMega.nzI use this to sync my testing tools and notes. helpful if you have multiple systems and a nice backup too… FREE aswellhttps://mega.nz/Ngrokthis is great tool for getting a public ip or address. I use this if i need to quickly run a web server over the internetCyberChefAlways one to keep bookmarked. has so many tools. always my go to  if i want to check a hashhttps://gchq.github.io/CyberChef/Web Application TestingBurp SuitePretty much the standard when it comes to webapp testing. it does so so much. It likes to eat all your ram . nom nom nomNucleiTHis is gold!. A template based vulnerbility scanner not fully limited to web app testing.  [ProjectDisvoery Github] (https://github.com/projectdiscovery)Aquatonebest for web screenshots. can supply it a url list or nmap fileHttpxanother gem from the projectdiscovey guys. this will check if the url is alive. really nice output optionsInfastructure Testingnmapshould be in everyones tool box. one to master . i dont need to say much else :wink:Brutespraythis is great for automated brutefocing. will take in a nmap file and blast ur wordlists.  u may want to skip ssh to start withnessus-fle-parserif you dont know about this one then now u do! This was a game changer when i found it . This amazing python script will parse multiple .nessus files to a spreadsheet that makes sense. This then gives you the power to filter and search in excel away from the horrid nessus GUIhttps://github.com/LimberDuck/nessus-file-reader"
  },
  
  {
    "title": "So I actually found a bug in the wild (XSS)",
    "url": "/posts/xss-bug-writeup/",
    "categories": "writeup",
    "tags": "XSS, Bug-Bounty, WebApp",
    "date": "2022-01-22 13:55:00 +0100",
    





    "snippet": "Yep i Finally found one. I found Stored XSS on bzscan and it wasnt on purpose. :laughing:So a while ago was on a testing some front end webappp which uses the Binance Smart ChainIt was possible to include a stored cross-site scripting payload into a transaction which was found to execute. The payload gets encoded within the data parameter of the HTTP request as shown belowPayload: &lt;marquee onclick=\"alert(1)\"&gt;test&lt;/marquee&gt;Parameter: Data (Ascii HEX)HTTP Request:POST / HTTP/1.1Host: data-seed-prebsc-1-s1.binance.org:8545Content-Length: 852Sec-Ch-Ua: \"Chromium\";v=\"94\", \"Google Chrome\";v=\"94\", \";Not A Brand\";v=\"99\"Accept: application/jsonContent-Type: application/jsonSec-Ch-Ua-Mobile: ?0User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.54 Safari/537.36Sec-Ch-Ua-Platform: \"Windows\"Origin: chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknnSec-Fetch-Site: noneSec-Fetch-Mode: corsSec-Fetch-Dest: emptyAccept-Encoding: gzip, deflateAccept-Language: en-GB,en-US;q=0.9,en;q=0.8Connection: close{\"id\":2929565956701,\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{\"from\":\"XXXX\",\"to\":\"YYYY\",\"value\":\"0x0\",\"data\":\"0x258aa60d00000000000000000000000044e60930c1c5c27d51f83a15a5e142299cee5b4b00000000000000000000000000000000000000000000010f0cf064dd59200000000000000000000000000000000000000000000000000000000000000967a7600000000000000000000000000000000000000000000000000000000001e187e000000000000000000000000000000000000000000000006c6b935b8bbd40000000000000000000000000000000000000000000000000000009b6e64a8ec6000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000002a3c6d617271756565206f6e636c69636b3d22616c657274283129223e746573743c2f6d6172717565653e00000000000000000000000000000000000000000000\"}]}Decoding the data parameter from ascii hex we can see the payload has been included.%.¦..................*&lt;marquee onclick=\"alert(1)\"&gt;test&lt;/marquee&gt;......................This gets injected sucessfully and stored in the blockchainon the 2nd from bottom Data line change it from Hex to text.You will notice the word test going across the screen which tells us the HTML code is being executed. When clicking the mouse alert(1) will be tiggered as shown in the screenshot below.Here is a little gif demoI submitted a report to Bscscan who have resolved the issue and thanked me putting me into their hall of famehttps://bscscan.com/bugbounty:sunglasses:"
  },
  
  {
    "title": "ZSH Stuff",
    "url": "/posts/zsh/",
    "categories": "",
    "tags": "",
    "date": "2022-01-22 13:55:00 +0100",
    





    "snippet": "will share some cool stuff i have done to my zshto install most of these . stick in .zshrcMy PromptHere is my colourful PS1. i like this one it gives me the key info i want to see and I can copy the command i ran along with the time and date from the shell into my notesJeyll dont like it in a code block so grab it from HERETo install replace the $PROMPT varaiable in your .zshrc the one in the text file  aboveZSH plugins  fzf  zsh-completeions  zsh-autocompleteBindkeybindkey -e                                        # emacs key bindingsbindkey ' ' magic-space                           # do history expansion on spacebindkey '^[[3;5~' kill-word                       # ctrl + Suprbindkey '^[[3~' delete-char                       # deletebindkey '^[[1;5C' forward-word                    # ctrl + -&gt;bindkey '^[[1;5D' backward-word                   # ctrl + &lt;-bindkey '^[[5~' beginning-of-buffer-or-history    # page upbindkey '^[[6~' end-of-buffer-or-history          # page downbindkey '^[[H' beginning-of-line                  # homebindkey '^[[F' end-of-line                        # endbindkey '^[[Z' undo                               # shift + tab undo last action#bindkey \"${key[Up]}\" up-line-or-search\t           # &lt;word&gt; up arrow - will search history #bindkey \"${key[Down]}\" down-line-or-search \t  # &lt;word&gt; down arrow - will search history Hisotry Settings# https://zsh.sourceforge.io/Doc/Release/Options.htmlHISTFILE=\"$HOME/.zsh_history\"HISTSIZE=\"9999999999999\"SAVEHIST=\"999999999\"HIST_STAMPS=\"%d/%m/%y %T \"\t # zsh \thistory timestampHISTCONTROL=erasedups\t\t # dont have duplicates in historyHIST_IGNORE_DUPS=\"true\"\t\t # wont duplicate the same command if matches the last one setopt BANG_HIST                 # Treat the '!' character specially during expansion.setopt EXTENDED_HISTORY          # Write the history file in the \":start:elapsed;command\" format.setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.setopt SHARE_HISTORY             # Share history between all sessions.setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.setopt HIST_VERIFY               # Don't execute immediately upon history expansion.setopt HIST_BEEP                 # Beep when accessing nonexistent history.setopt hist_expire_dups_first    # delete duplicates first when HISTFILE size exceeds HISTSIZE#setopt hist_ignore_dups         # ignore duplicated commands history list#setopt hist_ignore_space        # ignore commands that start with space#setopt hist_verify              # show command with history expansion to user before running it#setopt share_history            # share command history dataMiscsetopt ALL_EXPORT\t\t# all variables set are exported setopt AUTO_CD\t\t\t# forogt cd then this will jump ..cd for yousetopt CORRECT\t\t\t# try and autocorrect commands "
  },
  
  {
    "title": "Linux Magic",
    "url": "/posts/linux-magic/",
    "categories": "cheatsheet",
    "tags": "",
    "date": "2022-01-22 13:55:00 +0100",
    





    "snippet": ":tophat:So here is a collections of bits I have in my .zshrc (yes im a zsh guy)These are mostly alias and functions which can be added into .bashrc or .zshrc file providing you have the tool setup correctly. I will try to include anything else needed in the rlevent section.I will keep adding cool bits to this list overtime. :smile:enjoygrepsome day to day greps that always useful to keep at the ready.# colored grepalias grep='grep --color=auto'alias egrep='egrep --color=auto'alias fgrep='fgrep --color=auto'# grep out just ip address 129.168.0.1 (cat nmap.gnmap | grep-ip)alias grep-ip='grep -oE \"\\b([0-9]{1,3}\\.){3}[0-9]{1,3}\\b\"' # grep out just ipv6 address  3ffe:1900:4545:3:200:f8ff:fe21:67cf (ifconfig | grep-ip6)alias grep-ip6='grep -oE \"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\"'# grep out just MAC addres 08:00:27:3b:0c:7d (ifconfig| grep-mac)alias grep-mac=\"grep -oE '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'\" # grep out URL http://test.com -  may need to tidy output up a little alias grep-url=\"egrep -o 'http.+'\"nmapColoured nmap outputmake nmap look pretty and colourful.# install grcsudo apt-get install grc# create a new alias for nmap alias nmap=\"grc nmap\" # this doesnt play ball with autocomplete on zsh so list out the nmap scriptsjust a lazy one to quickly list out the nmap scripts avalible. somehow i use it quite a bit along with grepalias nmap-scripts='ls -la /usr/share/nmap/scripts/'update nmap script DBalias to update nmap and its scripts databasealias nmap-update=\"sudo apt-get install nmap &amp;&amp; nmap -script-updatedb\"Scanning aliasquite a few useful aliasexamples:nmap-tcp-full\t192.168.1.1/24nmap-udp-def\t192.168.1.2# host discoveryalias nmap-ping='sudo nmap -sP -v -n -oA nmap_ping $1'alias nmap-xmas='sudo nmap -n -sX -oN nmap_xmas $1'alias nmap-protocol='sudo nmap -T4 -sO $1 -oA nmap_proto'alias nmap-disc-adv='sudo nmap -v -n -PE -PM -PS21,22,23,25,26,53,80,81,110,111,113,135,139,143,179,199,443,445,465,514,548,554,587,993,995,1025,1026,1433,1720,1723,2000,2001,3306,3389,5060,5900,6001,8000,8080,8443,8888,10000,32768,49152 -PA21,80,443,13306 -oA nmap_disc_adv $1'alias nmap-disc-adv2='nmap -sn --min-hostgroup 100 -vv --max-hostgroup 125 -PE -PM -PS21,22,23,25,26,53,80,81,110,111,113,135,139,143,179,199,443,445,465,514,548,554,587,993,995,1025,1026,1433,1720,1723,2000,2001,3306,3389,5060,5900,6001,8000,8080,8443,8888,10000,32768,49152 -PP -PU161,139 -PA22,80,443,445,3389 --source-port 53 $1 -oA nmap_disc_adv2'# tcpalias nmap-tcp-fast='nmap -sSV -F -vv --reason -oA nmap_tcp_fast $1'alias nmap-tcp-full='nmap -sSV -vvv -p0- --reason -oA nmap_tcp_full $1'alias nmap-tcp-fullconn='nmap -sTV -vv -p0- --reason -oA nmap_tcp_fullconn $1'alias nmap-tcp-def='nmap -sSV -vv --reason --script=banner,version -oA nmap_tcp_def_safe $1'# udpalias nmap-udp-def='nmap -v -sU -Pn -n --reason -oA nmap_udp_def $1'alias nmap-udp-fast='nmap -v -Pn -sU -n -F --reason -oA nmap_udp_fast $1'# vulnscan# this needs the vulscan script installing - https://github.com/scipag/vulscanalias nmap-tcp-vulnscan='nmap -sS -v --reason --script=vulscan/vulscan.nse --script-args vulscanshowall=1 -oA nmap_vulnscan $1'# nmap - deeper scriptsalias nmap-tcp-def-script-vuln-unsafe='nmap -sSV ---script exploit,vuln --script-args=unsafe=1 -oA nmap_tcp_script-vuln-unsafe $1'alias nmap-tcp-fast-script-heavy-unsafe='nmap -sSV -F --script vuln,brute,exploit,intrusive,fuzzer --script-args=unsafe=1 -oA nmap_tcp_script-heavy-unsafe $1'Metasploit# update metasploit **BE CAREFUL**alias m-update='apt update; apt install metasploit-framework'Nessus# start servicealias nessus-start='service nessusd start'# stop servicealias nessus-stop='service nessusd stop'#update nessusalias nessus-update='/opt/nessus/sbin/nessuscli update --all'# nessus clialias nessus-cli='/opt/nessus/sbin/nessuscli'# start nessus and open in firefoxalias n=\"service nessusd start &amp;&amp; sleep 1.5 &amp;&amp; nohup firefox https://localhost:8834/ &amp;&gt;/dev/null &amp;\"Log InfoThis function is useful just to quickly save a record of things such as IP Address, Current User and Time before you start a test.creates a file called info.txt in current directorystick in your .bashrc or .zshrcUse: loginfofunction loginfo () {#logfile=\"info_$(date \"+%m-%d-%y_%H-%M\").txt\"logfile=\"info.txt\"echo \"---------------------\" | tee  $logfileecho \"date:\"                 | tee -a $logfileecho \"---------------------\" | tee -a $logfiledate                         | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"User:\"                 | tee -a $logfileecho \"---------------------\" | tee -a $logfileid\t\t\t\t\t\t\t | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"pwd\"                   | tee -a $logfileecho \"---------------------\" | tee -a $logfilepwd                          | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"ifconfig:\"             | tee -a $logfileecho \"---------------------\" | tee -a $logfileifconfig                     | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"Route:\"                | tee -a $logfileecho \"---------------------\" | tee -a $logfileroute                        | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"/etc/resolv.conf\"      | tee -a $logfileecho \"---------------------\" | tee -a $logfilecat /etc/resolv.conf         | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"nmap --iflist\"      | tee -a $logfileecho \"---------------------\" | tee -a $logfilenmap --iflist\t\t       | tee -a $logfileecho \"---------------------\" | tee -a $logfile}loopagesome tools dont take input from a file with others taking it and mushing it into a single file. xargs and parallels can be used to solve this.say you get a file of  urls - urls.txt and you want to run nikto on themcat urls.txthttps://www.google.co.ukhttp://192.168.1.2/https://dangerousserver:80https://pen-isalnd.xyzparrallelsparallel --bar --eta -a web-urls.txt 'nikto -C all -h {} | tee nikto_$(echo {}| cut -d'/' -f3 | tr -d ^ | tr % - | tr : -).txtxargscat urls.txt | xargs bash -c 'nikto -C all -h $@ | tee nikto_$(echo $@ | cut -d'/' -f3 | tr -d ^ | tr % - | tr : -).txt' bashthis will give you nice outputnikto_192.168.1.2.txtnikto_dangerousserver-80.txtnikto_pen-isalnd.xyz.txtnikto_www.google.co.uk.txtOut of the 2 i find parrallels better it has more features and can run more than 1 job at a time controlling jobs up with -j X"
  },
  
  {
    "title": "Level Up you Game!",
    "url": "/posts/level-up/",
    "categories": "Tips",
    "tags": "Tips",
    "date": "2022-01-13 00:00:00 +0100",
    





    "snippet": "This is just some key things that I found helped me on my quest.“Minimize, Systemize, Automize” Touch TypingThe faster and better you type the more productive u can be and dump your bran quicker. Spend 15mins daily and master itLean to Codebash, powershell, python, javascript ..watever find one and learn it. this has helped me loads. automate repeated boring stuff with scripts so u can do the fun stuff. This will really help with efficencyHotkeyslearn hotkeys to speed up your workflow. Windows, Linx, Browser, Burp, Word..est learn the ones for the stuff u use alotMake Checklistshaving checklists and cheatsheets are useful for building consistency and allows you to continuly refine your processes. I have these for each type of testing i do. Allows me to tick off and know what ive done and what needs finshed. I mainly use spreadsheets because i can add macros in to complete certain bitsMacroslearn some basic vba and create macros to help you report. formatting ones. it will take some time but can make reporitng life alot better. Stuff like seeting boarder and colour of tables or  crop, centring and adding in a caption for images.  there is lots u can do here.AutoHotKey can come in use here. I know i keep recomending itCreate a Personal WikiHave somewhere to document ur notes, checklists est. When I started I used Onenote as a scapbook saving stuff from everywhere i can find into sections so i had a crude place i can search for bits and bobs… was also helpful as it worked offline so can access it when undeground stuck in a DC with not internet.OrganizationHave a tidy notes, folder structure. it will help u out keep all your testing data in one location project under 1 folder.Template ItCreate templates and build up databases of stuff you use regullarly. For example when repporting i have databaes of findings, tables, exec summaries which i can refer to and copy and paste in making things alot less painful.Note Takinglearn to take notes and what notes u should record. keep it to the point and think can it be used in the report. dont want to have to do multple steps. Try and do things onceLearn the Basics Firstive found that learning the basics before jumpinging into the more advanced sexy issues and tools helped me understand whats going on and how to troubleshoot so much betterMaster Your Operationg SystemKnow your daily driver inside and out or know them all.  I maninly focuse on windows and kaliPractise Daily or as much as you can!Being a l33t hax0r takes practise as like with blacksmithing you wont make a cool sword on your first attempt it takes practise, practice, pracise. I struggle nowdays but try to do CTFs regually just to learn new things and try to keep up.Learn from your mistakespretty obvious one . if you fall analyze how you can do better, what can you put in place so it doesnt happen again.Backupsmake sure u have them!! take them regularry"
  },
  
  {
    "title": "Kioptrix Level 1",
    "url": "/posts/kioptrix-level-1/",
    "categories": "CTF, Vulnhub",
    "tags": "CTF, Vulnhub",
    "date": "2017-02-17 13:52:16 +0100",
    





    "snippet": "This is a challenge writeup on my blog to sharpen my markdown skillz and figure out a nice template going forward! A nice ez box to start with :DName: Kioptrix: Level 1 (#1)Date release: 17 Feb 2010Author: KioptrixSeries: KioptrixWeb page: http://www.kioptrix.com/blog/?page_id=135Vulnhub URL: https://www.vulnhub.com/entry/kioptrix-level-1-1,22/Description:This Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player). The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges.Port ScanningTCPnmap -sS -n -oN 192.168.0.23.quick.nmap 192.168.0.23PORT     STATE SERVICE     REASON         VERSION22/tcp   open  ssh         syn-ack ttl 64 OpenSSH 2.9p2 (protocol 1.99)80/tcp   open  http        syn-ack ttl 64 Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)139/tcp  open  netbios-ssn syn-ack ttl 64 Samba smbd (workgroup: MYGROUP)443/tcp  open  ssl/http    syn-ack ttl 64 Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)UDPDecided to mix it up and use unicorncan here.unicornscan -mU -r200-Iv -p 0-65535 -l 192.168.0.23_udp.unicorn 192.168.0.23Service Enumeration22 - sshssh 192.168.0.23Not that easy. Default and silly credentials didnt work here (root:root, est)80 - httphttp://192.168.0.23Just some default content. I ran Nikto and Dirb against the web service which returned a few bits.nikto -h 192.168.0.23dirb http://192.168.0.23Server: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b/test.phpAllowed HTTP Methods: GET, HEAD, OPTIONS, TRACE OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XSTOSVDB-682: /usage/: Webalizer may be installed. Versions lower than 2.01-09 vulnerable to Cross Site Scripting (XSS). http://www.cert.org/advisories/CA-2000-02.html.OSVDB-3268: /manual/: Directory indexing found.OSVDB-3092: /manual/: Web server manual found.OSVDB-3268: /icons/: Directory indexing found.OSVDB-3233: /icons/README: Apache default file found.OSVDB-3092: /test.php: This might be interesting...139 - netbiosenum4linux 192.168.0.23 &gt; enum4linux_192.168.0.23KIOPTRIX       Wk Sv PrQ Unx NT SNT Samba ServerDomain=[MYGROUP] OS=[Unix] Server=[Samba 2.2.1a]//192.168.0.23/IPC$\t[E] Can't understand response://192.168.0.23/ADMIN$\t[E] Can't understand response:ExploitationExploit used: https://www.exploit-db.com/exploits/10/searchsploit sambasearchsploit was used to find a exploit in the version of samba running on portThe exploit was downloaded and compiledStarted a netcat listener on port 4444Run the exploitGet root shell on the target!😎😎😎From here we can get a tty and read the flag"
  }
  
]

